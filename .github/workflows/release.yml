name: Docker Image For Production
on: 
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: 100-hours-a-week/looper-ai-summary

jobs:
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
      security-events: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
      - name: Setup Node.js for semantic-release
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      
      - name: Install semantic-release
        run: |
          npm init -y
          npm install --save-dev semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog @semantic-release/exec
      
      - name: Create semantic-release config
        run: |
          echo '{
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              ["@semantic-release/exec", {
                "prepareCmd": "echo \"__version__ = '\''${nextRelease.version}'\''\" > version.py"
              }],
              ["@semantic-release/git", {
                "assets": ["version.py", "CHANGELOG.md"],
                "message": "chore(release): ${nextRelease.version} [skip ci]\\n\\n${nextRelease.notes}"
              }],
              ["@semantic-release/github", {
                "addReleases": "bottom",
                "successComment": false,
                "failComment": false,
                "failTitle": false,
                "labels": false,
                "releasedLabels": false
              }]
            ]
          }' > .releaserc.json
      
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: npx semantic-release
        
      - name: Get version from semantic-release
        id: get_version
        run: |
          if [ -f version.py ]; then
            VERSION=$(python -c "exec(open('version.py').read()); print(__version__)")
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "version=latest" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build Docker image
        run: |
          docker build -f Dockerfile.k8s -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }} .
      
      - name: Log into container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
